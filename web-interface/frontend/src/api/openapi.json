{
  "openapi": "3.1.0",
  "info": {
    "title": "CV Adapter Web Interface",
    "version": "0.1.0"
  },
  "paths": {
    "/v1/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "description": "Register a new user.",
        "operationId": "register_v1_auth_register_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Email already registered",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "message": "Email already registered",
                    "code": "EMAIL_EXISTS",
                    "field": "email"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "description": "Login user.",
        "operationId": "login_v1_auth_login_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_v1_auth_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "description": "Logout user.",
        "operationId": "logout_v1_auth_logout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Response Logout V1 Auth Logout Post"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token.",
        "operationId": "refresh_token_v1_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_refresh_token_v1_auth_refresh_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User Profile",
        "description": "Get current user's profile.",
        "operationId": "get_user_profile_user_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update User Profile",
        "description": "Update current user's profile.",
        "operationId": "update_user_profile_user_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/user/detailed-cvs": {
      "get": {
        "tags": [
          "detailed-cvs"
        ],
        "summary": "Get User Detailed Cvs",
        "description": "Get all user's detailed CVs.",
        "operationId": "get_user_detailed_cvs_user_detailed_cvs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DetailedCVResponse"
                  },
                  "type": "array",
                  "title": "Response Get User Detailed Cvs User Detailed Cvs Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/user/detailed-cvs/{language_code}": {
      "get": {
        "tags": [
          "detailed-cvs"
        ],
        "summary": "Get User Detailed Cv",
        "description": "Get user's detailed CV by language.",
        "operationId": "get_user_detailed_cv_user_detailed_cvs__language_code__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "language_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Language Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedCVResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "detailed-cvs"
        ],
        "summary": "Upsert User Detailed Cv",
        "description": "Create or update user's detailed CV for a language.",
        "operationId": "upsert_user_detailed_cv_user_detailed_cvs__language_code__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "language_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Language Code"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetailedCVCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedCVResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "detailed-cvs"
        ],
        "summary": "Delete User Detailed Cv",
        "description": "Delete user's detailed CV by language.",
        "operationId": "delete_user_detailed_cv_user_detailed_cvs__language_code__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "language_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Language Code"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/user/detailed-cvs/{language_code}/primary": {
      "put": {
        "tags": [
          "detailed-cvs"
        ],
        "summary": "Set Primary Cv",
        "description": "Set a CV as primary.",
        "operationId": "set_primary_cv_user_detailed_cvs__language_code__primary_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "language_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Language Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DetailedCVResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Jobs",
        "description": "Get all job descriptions for a language.",
        "operationId": "get_jobs_jobs_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "language_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en",
              "title": "Language Code"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobDescriptionResponse"
                  },
                  "title": "Response Get Jobs Jobs Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "message": "Could not validate credentials"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "jobs"
        ],
        "summary": "Create Job",
        "description": "Create new job description.",
        "operationId": "create_job_jobs_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobDescriptionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDescriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "message": "Could not validate credentials"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{job_id}": {
      "get": {
        "tags": [
          "jobs"
        ],
        "summary": "Get Job",
        "description": "Get job description by ID.",
        "operationId": "get_job_jobs__job_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDescriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "message": "Could not validate credentials"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Job description not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "jobs"
        ],
        "summary": "Update Job",
        "description": "Update job description.",
        "operationId": "update_job_jobs__job_id__put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Job Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobDescriptionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobDescriptionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "message": "Could not validate credentials"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Job description not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "jobs"
        ],
        "summary": "Delete Job",
        "description": "Delete job description.",
        "operationId": "delete_job_jobs__job_id__delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "example": {
                  "detail": {
                    "message": "Could not validate credentials"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "example": {
                  "detail": "Job description not found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/generate-competences": {
      "post": {
        "tags": [
          "generations"
        ],
        "summary": "Generate Competences",
        "description": "Generate core competences from CV and job description.",
        "operationId": "generate_competences_api_generate_competences_post",
        "parameters": [
          {
            "name": "language_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en",
              "title": "Language Code"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCompetencesRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "title": "Response Generate Competences Api Generate Competences Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/generate-cv": {
      "post": {
        "tags": [
          "generations"
        ],
        "summary": "Generate Cv",
        "description": "Generate a complete CV using core competences.",
        "operationId": "generate_cv_api_generate_cv_post",
        "parameters": [
          {
            "name": "language_code",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "en",
              "title": "Language Code"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCVRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/generate": {
      "post": {
        "tags": [
          "generations"
        ],
        "summary": "Generate And Save Cv",
        "description": "Generate and save a new CV for job application.",
        "operationId": "generate_and_save_cv_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GeneratedCVCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedCVResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/generations": {
      "get": {
        "tags": [
          "generations"
        ],
        "summary": "Get User Generations",
        "description": "Get all generated CVs for current user.",
        "operationId": "get_user_generations_generations_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GeneratedCVResponse"
                  },
                  "type": "array",
                  "title": "Response Get User Generations Generations Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/generations/{cv_id}": {
      "get": {
        "tags": [
          "generations"
        ],
        "summary": "Get Generated Cv",
        "description": "Get a specific generated CV.",
        "operationId": "get_generated_cv_generations__cv_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "cv_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Cv Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GeneratedCVResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "user"
        ],
        "title": "AuthResponse",
        "description": "Schema for authentication response."
      },
      "Body_login_v1_auth_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^password$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_v1_auth_login_post"
      },
      "Body_refresh_token_v1_auth_refresh_post": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "Body_refresh_token_v1_auth_refresh_post"
      },
      "ContactRequest": {
        "properties": {
          "value": {
            "type": "string",
            "title": "Value"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "value",
          "type"
        ],
        "title": "ContactRequest"
      },
      "DetailedCVCreate": {
        "properties": {
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "content": {
            "type": "object",
            "title": "Content"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "content"
        ],
        "title": "DetailedCVCreate",
        "description": "Schema for creating a detailed CV."
      },
      "DetailedCVResponse": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "content": {
            "type": "object",
            "title": "Content"
          },
          "is_primary": {
            "type": "boolean",
            "title": "Is Primary",
            "default": false
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "language_code",
          "content",
          "id",
          "user_id"
        ],
        "title": "DetailedCVResponse",
        "description": "Schema for detailed CV responses."
      },
      "GenerateCVRequest": {
        "properties": {
          "cv_text": {
            "type": "string",
            "title": "Cv Text"
          },
          "job_description": {
            "type": "string",
            "title": "Job Description"
          },
          "personal_info": {
            "$ref": "#/components/schemas/PersonalInfo"
          },
          "approved_competences": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Approved Competences"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "cv_text",
          "job_description",
          "personal_info",
          "approved_competences"
        ],
        "title": "GenerateCVRequest"
      },
      "GenerateCompetencesRequest": {
        "properties": {
          "cv_text": {
            "type": "string",
            "title": "Cv Text"
          },
          "job_description": {
            "type": "string",
            "title": "Job Description"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "cv_text",
          "job_description"
        ],
        "title": "GenerateCompetencesRequest"
      },
      "GeneratedCVCreate": {
        "properties": {
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "content": {
            "type": "object",
            "title": "Content"
          },
          "detailed_cv_id": {
            "type": "integer",
            "title": "Detailed Cv Id"
          },
          "job_description_id": {
            "type": "integer",
            "title": "Job Description Id"
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "content",
          "detailed_cv_id",
          "job_description_id"
        ],
        "title": "GeneratedCVCreate",
        "description": "Schema for creating a generated CV."
      },
      "GeneratedCVResponse": {
        "properties": {
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "content": {
            "type": "object",
            "title": "Content"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "detailed_cv_id": {
            "type": "integer",
            "title": "Detailed Cv Id"
          },
          "job_description_id": {
            "type": "integer",
            "title": "Job Description Id"
          }
        },
        "type": "object",
        "required": [
          "language_code",
          "content",
          "id",
          "created_at",
          "user_id",
          "detailed_cv_id",
          "job_description_id"
        ],
        "title": "GeneratedCVResponse",
        "description": "Schema for generated CV responses."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "JobDescriptionCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code"
          }
        },
        "type": "object",
        "required": [
          "title",
          "description",
          "language_code"
        ],
        "title": "JobDescriptionCreate",
        "description": "Schema for creating a job description."
      },
      "JobDescriptionResponse": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "language_code": {
            "type": "string",
            "title": "Language Code"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "title",
          "description",
          "language_code",
          "id"
        ],
        "title": "JobDescriptionResponse",
        "description": "Schema for job description responses."
      },
      "JobDescriptionUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "JobDescriptionUpdate",
        "description": "Schema for updating a job description."
      },
      "PersonalInfo": {
        "properties": {
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "email": {
            "$ref": "#/components/schemas/ContactRequest"
          },
          "phone": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactRequest"
              },
              {
                "type": "null"
              }
            ]
          },
          "location": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ContactRequest"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "full_name",
          "email"
        ],
        "title": "PersonalInfo"
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserCreate",
        "description": "Schema for creating a new user."
      },
      "UserResponse": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "personal_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Personal Info"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "created_at"
        ],
        "title": "UserResponse",
        "description": "Schema for user responses."
      },
      "UserUpdate": {
        "properties": {
          "personal_info": {
            "type": "object",
            "title": "Personal Info"
          }
        },
        "type": "object",
        "required": [
          "personal_info"
        ],
        "title": "UserUpdate",
        "description": "Schema for updating a user's personal info."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "v1/auth/login"
          }
        }
      }
    }
  }
}
