/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the generation script to regenerate this file.
 */

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Value = string;
/**
 * e.g., 'Email', 'Phone', 'Location'
 */
export type Type = string;
/**
 * e.g., 'email', 'phone', 'linkedin'
 */
export type Icon = string | null;
/**
 * Optional URL for the contact (e.g., mailto:, tel:, https://)
 */
export type Url = string | null;
export type FullName = string;
export type Text = string;
export type Name = string;
export type Description = string | null;
export type Location = string | null;
export type Position = string;
export type StartDate = string;
export type EndDate = string | null;
export type Description1 = string;
export type Technologies = string[];
export type Degree = string;
export type StartDate1 = string;
export type EndDate1 = string | null;
export type Description2 = string;
export type Text1 = string;
export type Name1 = string;
export type Skills = SkillDTO[];
export type Text2 = string;
export type Text3 = string;
export type CoreCompetences = CoreCompetenceDTO[];
export type Experiences = ExperienceDTO[];
export type Education = EducationDTO[];
export type Skills1 = SkillGroupDTO[];
export type LanguageCode = "en" | "fr" | "de" | "es" | "it";
export type Name2 = string;
export type NativeName = string;
export type DateFormat = string | null;
export type DecimalSeparator = string | null;
export type ThousandsSeparator = string | null;
export type CvText = string;
export type JobDescription = string;
export type Notes = string | null;
export type CvText1 = string;
export type JobDescription1 = string;
export type FullName1 = string;
export type Value1 = string;
export type Type1 = string;
export type Icon1 = string | null;
export type Url1 = string | null;
export type ApprovedCompetences = string[];
export type Notes1 = string | null;

export interface Tmp1Osmq1Nt {
  ContactDTO: ContactDTO;
  PersonalInfoDTO: PersonalInfoDTO;
  CoreCompetenceDTO: CoreCompetenceDTO;
  InstitutionDTO: InstitutionDTO;
  ExperienceDTO: ExperienceDTO;
  EducationDTO: EducationDTO;
  SkillDTO: SkillDTO;
  SkillGroupDTO: SkillGroupDTO;
  TitleDTO: TitleDTO;
  SummaryDTO: SummaryDTO;
  CVDTO: CVDTO;
  Language: Language;
  LanguageCode: LanguageCode;
  GenerateCompetencesRequest: GenerateCompetencesRequest;
  GenerateCVRequest: GenerateCVRequest;
  [k: string]: unknown;
}
/**
 * Represents a single contact method with optional metadata.
 */
export interface ContactDTO {
  value: Value;
  type: Type;
  icon?: Icon;
  url?: Url;
  [k: string]: unknown;
}
/**
 * Personal information with flexible contact handling.
 */
export interface PersonalInfoDTO {
  full_name: FullName;
  email?: ContactDTO | null;
  phone?: ContactDTO | null;
  location?: ContactDTO | null;
  linkedin?: ContactDTO | null;
  github?: ContactDTO | null;
  [k: string]: unknown;
}
export interface CoreCompetenceDTO {
  text: Text;
  [k: string]: unknown;
}
export interface InstitutionDTO {
  name: Name;
  description?: Description;
  location?: Location;
  [k: string]: unknown;
}
export interface ExperienceDTO {
  company: InstitutionDTO;
  position: Position;
  start_date: StartDate;
  end_date?: EndDate;
  description?: Description1;
  technologies?: Technologies;
  [k: string]: unknown;
}
export interface EducationDTO {
  university: InstitutionDTO;
  degree: Degree;
  start_date: StartDate1;
  end_date?: EndDate1;
  description?: Description2;
  [k: string]: unknown;
}
export interface SkillDTO {
  text: Text1;
  [k: string]: unknown;
}
export interface SkillGroupDTO {
  name: Name1;
  skills: Skills;
  [k: string]: unknown;
}
export interface TitleDTO {
  text: Text2;
  [k: string]: unknown;
}
export interface SummaryDTO {
  text: Text3;
  [k: string]: unknown;
}
export interface CVDTO {
  personal_info: PersonalInfoDTO;
  title: TitleDTO;
  summary: SummaryDTO;
  core_competences: CoreCompetences;
  experiences: Experiences;
  education: Education;
  skills: Skills1;
  language: Language;
  [k: string]: unknown;
}
/**
 * Representation of a language with detection and metadata capabilities.
 */
export interface Language {
  code: LanguageCode;
  name: Name2;
  native_name: NativeName;
  date_format?: DateFormat;
  decimal_separator?: DecimalSeparator;
  thousands_separator?: ThousandsSeparator;
  [k: string]: unknown;
}
export interface GenerateCompetencesRequest {
  cv_text: CvText;
  job_description: JobDescription;
  notes?: Notes;
  [k: string]: unknown;
}
export interface GenerateCVRequest {
  cv_text: CvText1;
  job_description: JobDescription1;
  personal_info: PersonalInfo;
  approved_competences: ApprovedCompetences;
  notes?: Notes1;
  [k: string]: unknown;
}
export interface PersonalInfo {
  full_name: FullName1;
  email: ContactRequest;
  phone?: ContactRequest | null;
  location?: ContactRequest | null;
  [k: string]: unknown;
}
export interface ContactRequest {
  value: Value1;
  type: Type1;
  icon?: Icon1;
  url?: Url1;
  [k: string]: unknown;
}

export interface GenerateCompetencesResponse {
    competences: string[];
}
