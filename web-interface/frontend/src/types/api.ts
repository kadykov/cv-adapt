/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type AccessToken = string;
export type RefreshToken = string;
export type TokenType = string;
export type Email = string;
export type Id = number;
export type CreatedAt = string;
export type PersonalInfo = {
  [k: string]: unknown;
} | null;
export type Id1 = number;
export type CreatedAt1 = string;
export type FullName = string;
export type Value = string;
/**
 * e.g., 'Email', 'Phone', 'Location'
 */
export type Type = string;
/**
 * e.g., 'email', 'phone', 'linkedin'
 */
export type Icon = string | null;
/**
 * Optional URL for the contact (e.g., mailto:, tel:, https://)
 */
export type Url = string | null;
export type Text = string;
export type Text1 = string;
export type Text2 = string;
export type CoreCompetences = CoreCompetenceDTO[];
export type Name = string;
export type Description = string | null;
export type Location = string | null;
export type Position = string;
export type StartDate = string;
export type EndDate = string | null;
export type Description1 = string;
export type Technologies = string[];
export type Experiences = ExperienceDTO[];
export type Degree = string;
export type StartDate1 = string;
export type EndDate1 = string | null;
export type Description2 = string;
export type Education = EducationDTO[];
export type Name1 = string;
export type Text3 = string;
export type Skills1 = SkillDTO[];
export type Skills = SkillGroupDTO[];
/**
 * Standardized language codes.
 */
export type LanguageCode = "en" | "fr" | "de" | "es" | "it";
export type Value1 = string;
export type Type1 = string;
export type Icon1 = string | null;
export type Url1 = string | null;
export type LanguageCode1 = string;
export type IsPrimary = boolean;
export type LanguageCode2 = string;
export type IsPrimary1 = boolean;
export type CreatedAt2 = string;
export type UpdatedAt = string | null;
export type LanguageCode3 = string;
export type IsPrimary2 = boolean;
export type Id2 = number;
export type UserId = number;
export type Content3 = {
  [k: string]: unknown;
} | null;
export type IsPrimary3 = boolean | null;
export type CvText = string;
export type JobDescription = string;
export type FullName1 = string;
export type ApprovedCompetences = string[];
export type Notes = string | null;
export type CvText1 = string;
export type JobDescription1 = string;
export type Notes1 = string | null;
export type LanguageCode4 = string;
export type LanguageCode5 = string;
export type DetailedCvId = number;
export type JobDescriptionId = number;
export type LanguageCode6 = string;
export type Id3 = number;
export type CreatedAt3 = string;
export type UserId1 = number;
export type DetailedCvId1 = number;
export type JobDescriptionId1 = number;
export type Title = string;
export type Description3 = string;
export type LanguageCode7 = string;
export type Title1 = string;
export type Description4 = string;
export type LanguageCode8 = string;
export type CreatedAt4 = string;
export type UpdatedAt1 = string | null;
export type Title2 = string;
export type Description5 = string;
export type LanguageCode9 = string;
export type Id4 = number;
export type Title3 = string | null;
export type Description6 = string | null;
export type Email1 = string;
export type Password = string;
export type CoreCompetences1 = CoreCompetenceDTO[];
export type Experiences1 = ExperienceDTO[];
export type Education1 = EducationDTO[];
export type Skills2 = SkillGroupDTO[];
export type CreatedAt5 = string;
export type UpdatedAt2 = string | null;
export type Email2 = string;
export type Email3 = string;
export type Password1 = string;

export interface Stdin {
  AuthResponse: AuthResponse;
  BaseResponseModel: BaseResponseModel;
  CVDTO: CVDTO;
  ContactDTO: ContactDTO;
  ContactRequest: ContactRequest;
  CoreCompetenceDTO: CoreCompetenceDTO;
  DetailedCVBase: DetailedCVBase;
  DetailedCVCreate: DetailedCVCreate;
  DetailedCVResponse: DetailedCVResponse;
  DetailedCVUpdate: DetailedCVUpdate;
  EducationDTO: EducationDTO;
  ExperienceDTO: ExperienceDTO;
  GenerateCVRequest: GenerateCVRequest;
  GenerateCompetencesRequest: GenerateCompetencesRequest;
  GeneratedCVBase: GeneratedCVBase;
  GeneratedCVCreate: GeneratedCVCreate;
  GeneratedCVResponse: GeneratedCVResponse;
  InstitutionDTO: InstitutionDTO;
  JobDescriptionBase: JobDescriptionBase;
  JobDescriptionCreate: JobDescriptionCreate;
  JobDescriptionResponse: JobDescriptionResponse;
  JobDescriptionUpdate: JobDescriptionUpdate;
  Language: Language;
  LanguageCode: LanguageCode;
  LoginForm: LoginForm;
  MinimalCVDTO: MinimalCVDTO;
  PersonalInfo: PersonalInfo1;
  PersonalInfoDTO: PersonalInfoDTO;
  SkillDTO: SkillDTO;
  SkillGroupDTO: SkillGroupDTO;
  SummaryDTO: SummaryDTO;
  TimestampedModel: TimestampedModel;
  TitleDTO: TitleDTO;
  UserBase: UserBase;
  UserCreate: UserCreate;
  UserResponse: UserResponse;
  UserUpdate: UserUpdate;
  [k: string]: unknown;
}
/**
 * Schema for authentication response.
 */
export interface AuthResponse {
  access_token: AccessToken;
  refresh_token: RefreshToken;
  token_type?: TokenType;
  user: UserResponse;
  [k: string]: unknown;
}
/**
 * Schema for user responses.
 */
export interface UserResponse {
  email: Email;
  id: Id;
  created_at: CreatedAt;
  personal_info?: PersonalInfo;
  [k: string]: unknown;
}
/**
 * Base model for API responses.
 */
export interface BaseResponseModel {
  id: Id1;
  created_at: CreatedAt1;
  [k: string]: unknown;
}
export interface CVDTO {
  personal_info: PersonalInfoDTO;
  title: TitleDTO;
  summary: SummaryDTO;
  core_competences: CoreCompetences;
  experiences: Experiences;
  education: Education;
  skills: Skills;
  language: Language;
  [k: string]: unknown;
}
/**
 * Personal information with flexible contact handling.
 */
export interface PersonalInfoDTO {
  full_name: FullName;
  email?: ContactDTO | null;
  phone?: ContactDTO | null;
  location?: ContactDTO | null;
  linkedin?: ContactDTO | null;
  github?: ContactDTO | null;
  [k: string]: unknown;
}
/**
 * Represents a single contact method with optional metadata.
 */
export interface ContactDTO {
  value: Value;
  type: Type;
  icon?: Icon;
  url?: Url;
  [k: string]: unknown;
}
export interface TitleDTO {
  text: Text;
  [k: string]: unknown;
}
export interface SummaryDTO {
  text: Text1;
  [k: string]: unknown;
}
export interface CoreCompetenceDTO {
  text: Text2;
  [k: string]: unknown;
}
export interface ExperienceDTO {
  company: InstitutionDTO;
  position: Position;
  start_date: StartDate;
  end_date?: EndDate;
  description?: Description1;
  technologies?: Technologies;
  [k: string]: unknown;
}
export interface InstitutionDTO {
  name: Name;
  description?: Description;
  location?: Location;
  [k: string]: unknown;
}
export interface EducationDTO {
  university: InstitutionDTO;
  degree: Degree;
  start_date: StartDate1;
  end_date?: EndDate1;
  description?: Description2;
  [k: string]: unknown;
}
export interface SkillGroupDTO {
  name: Name1;
  skills: Skills1;
  [k: string]: unknown;
}
export interface SkillDTO {
  text: Text3;
  [k: string]: unknown;
}
/**
 * Core language identity.
 */
export interface Language {
  code: LanguageCode;
  [k: string]: unknown;
}
export interface ContactRequest {
  value: Value1;
  type: Type1;
  icon?: Icon1;
  url?: Url1;
  [k: string]: unknown;
}
/**
 * Base detailed CV schema.
 */
export interface DetailedCVBase {
  language_code: LanguageCode1;
  content: Content;
  is_primary?: IsPrimary;
  [k: string]: unknown;
}
export interface Content {
  [k: string]: unknown;
}
/**
 * Schema for creating a detailed CV.
 */
export interface DetailedCVCreate {
  language_code: LanguageCode2;
  content: Content1;
  is_primary?: IsPrimary1;
  [k: string]: unknown;
}
export interface Content1 {
  [k: string]: unknown;
}
/**
 * Schema for detailed CV responses.
 */
export interface DetailedCVResponse {
  created_at: CreatedAt2;
  updated_at?: UpdatedAt;
  language_code: LanguageCode3;
  content: Content2;
  is_primary?: IsPrimary2;
  id: Id2;
  user_id: UserId;
  [k: string]: unknown;
}
export interface Content2 {
  [k: string]: unknown;
}
/**
 * Schema for updating a detailed CV.
 */
export interface DetailedCVUpdate {
  content?: Content3;
  is_primary?: IsPrimary3;
  [k: string]: unknown;
}
export interface GenerateCVRequest {
  cv_text: CvText;
  job_description: JobDescription;
  personal_info: PersonalInfo1;
  approved_competences: ApprovedCompetences;
  notes?: Notes;
  [k: string]: unknown;
}
export interface PersonalInfo1 {
  full_name: FullName1;
  email: ContactRequest;
  phone?: ContactRequest | null;
  location?: ContactRequest | null;
  [k: string]: unknown;
}
export interface GenerateCompetencesRequest {
  cv_text: CvText1;
  job_description: JobDescription1;
  notes?: Notes1;
  [k: string]: unknown;
}
/**
 * Base generated CV schema.
 */
export interface GeneratedCVBase {
  language_code: LanguageCode4;
  content: Content4;
  [k: string]: unknown;
}
export interface Content4 {
  [k: string]: unknown;
}
/**
 * Schema for creating a generated CV.
 */
export interface GeneratedCVCreate {
  language_code: LanguageCode5;
  content: Content5;
  detailed_cv_id: DetailedCvId;
  job_description_id: JobDescriptionId;
  [k: string]: unknown;
}
export interface Content5 {
  [k: string]: unknown;
}
/**
 * Schema for generated CV responses.
 */
export interface GeneratedCVResponse {
  language_code: LanguageCode6;
  content: Content6;
  id: Id3;
  created_at: CreatedAt3;
  user_id: UserId1;
  detailed_cv_id: DetailedCvId1;
  job_description_id: JobDescriptionId1;
  [k: string]: unknown;
}
export interface Content6 {
  [k: string]: unknown;
}
/**
 * Base job description schema.
 */
export interface JobDescriptionBase {
  title: Title;
  description: Description3;
  language_code: LanguageCode7;
  [k: string]: unknown;
}
/**
 * Schema for creating a job description.
 */
export interface JobDescriptionCreate {
  title: Title1;
  description: Description4;
  language_code: LanguageCode8;
  [k: string]: unknown;
}
/**
 * Schema for job description responses.
 */
export interface JobDescriptionResponse {
  created_at: CreatedAt4;
  updated_at?: UpdatedAt1;
  title: Title2;
  description: Description5;
  language_code: LanguageCode9;
  id: Id4;
  [k: string]: unknown;
}
/**
 * Schema for updating a job description.
 */
export interface JobDescriptionUpdate {
  title?: Title3;
  description?: Description6;
  [k: string]: unknown;
}
/**
 * Schema for login form data.
 */
export interface LoginForm {
  email: Email1;
  password: Password;
  [k: string]: unknown;
}
export interface MinimalCVDTO {
  title: TitleDTO;
  core_competences: CoreCompetences1;
  experiences: Experiences1;
  education: Education1;
  skills: Skills2;
  language: Language;
  [k: string]: unknown;
}
/**
 * Base model that includes created/updated timestamps.
 */
export interface TimestampedModel {
  created_at: CreatedAt5;
  updated_at?: UpdatedAt2;
  [k: string]: unknown;
}
/**
 * Base user schema.
 */
export interface UserBase {
  email: Email2;
  [k: string]: unknown;
}
/**
 * Schema for creating a new user.
 */
export interface UserCreate {
  email: Email3;
  password: Password1;
  [k: string]: unknown;
}
/**
 * Schema for updating a user's personal info.
 */
export interface UserUpdate {
  personal_info: PersonalInfo2;
  [k: string]: unknown;
}
export interface PersonalInfo2 {
  [k: string]: unknown;
}

export interface GenerateCompetencesResponse {
    competences: string[];
}
